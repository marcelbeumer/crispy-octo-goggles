serviceAccount:
  create: true
  annotations: {}
  name: ""

timescaledb:
  port: 5432
  useSsl: false
  serviceType: ClusterIP
  maxConnections: 300
  database: postgres
  user: user
  pass: pass
  storageClassName: ""
  storage: 100G
  image:
    repository: timescale/timescaledb
    tag: 2.5.1-pg14
    pullPolicy: Always
  imagePullSecrets: []
  resources: {}
  nodeSelector: {}
  affinity: {}
  tolerations: {}

influxdb2:
  adminUser:
    organization: "influxdata"
    bucket: "default"
    user: admin
    password: HmoPX3rAsDP7h8ITDhN1KPJXLWNVUdFV
    token: PqAqZGNFKSQIlHSG4uVvSW5PavPNeUIm

kafkaSettings:
  port: 9092
  topic: events

aggregator:
  disable: false
  replicaCount: 1
  image:
    repository: streamproc-registry:5000/aggregator
    pullPolicy: Always
    tag: "latest"
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 9995
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

consumerHigh:
  disable: false
  replicaCount: 1
  image:
    repository: streamproc-registry:5000/consumer-high
    pullPolicy: Always
    tag: "latest"
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 9996
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

consumerLow:
  disable: false
  replicaCount: 1
  image:
    repository: streamproc-registry:5000/consumer-low
    pullPolicy: Always
    tag: "latest"
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 9997
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

eventApi:
  disable: false
  replicaCount: 1
  image:
    repository: streamproc-registry:5000/event-api
    pullPolicy: Always
    tag: "latest"
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 9998
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

eventProducer:
  disable: false
  replicaCount: 1
  image:
    repository: streamproc-registry:5000/event-producer
    pullPolicy: Always
    tag: "latest"
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

webUi:
  disable: false
  replicaCount: 1
  image:
    repository: streamproc-registry:5000/web-ui
    pullPolicy: Always
    tag: "latest"
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 80
  ingress:
    enabled: true
    className: ""
    annotations:
      # FIXME: can not get rewrite target to work properly for mapping
      # aggregator to /api/data instead of /data
      # nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - host: streamproc.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
